apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Release.Name}}
  name: {{.Release.Name}}
  namespace: {{.Release.Namespace}}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{.Release.Name}}
      tier: backend
  template:
    metadata:
      labels:
        app: {{.Release.Name}}
        tier: backend
    spec:

      volumes:
      - name: mongo-mount
        persistentVolumeClaim:
          claimName: {{.Values.pvc.name}}

{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}

      containers:
      - name: {{.Release.Name}}
        image: mongo:4.4.6-bionic
        imagePullPolicy: IfNotPresent
        ports:
        - name: port
          containerPort: 27017
        # command: ["redis-server", "--requirepass", "$(REDIS_AUTH_PASSWORD)"]
        env:
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.Values.setAuth.secretName}}
              key: MONGO_PASSWORD
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: {{.Values.setAuth.secretName}}
              key: MONGO_USERNAME
        resources:
          limits:
            memory: "1024Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
          - name: mongo-mount
            mountPath: /data/db
            subPath: db