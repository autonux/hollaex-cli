{{- if .Values.cronjob.enable }}

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  labels:
    app: {{.Release.Name}}
    role: {{.Release.Namespace}}
  name: {{.Release.Name}}
  namespace: {{.Release.Namespace}}
spec:
  schedule: "{{.Values.cronjob.schedule}}"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:

{{- if .Values.imagePullSecrets }}
          imagePullSecrets:
          {{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end }}

{{- if .Values.nodeSelector }}
          nodeSelector:
          {{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}

          containers:
          - name: {{.Release.Name}}
            image: {{.Values.imageRegistry}}:{{.Values.dockerTag}}
            command: ["/bin/bash", "-c"]

    {{- if eq .Values.cronjob.mode "checkExchangeStatus" }}

            args:
              - node tools/crons/checkExchangeStatus.js;

    {{- else if eq .Values.cronjob.mode "redistribute" }}

            args:
              - node tools/crons/redistribute.js;

    {{- else if eq .Values.cronjob.mode "userLevel" }}

            args:
              - node tools/crons/userLevel.js;
    
    {{- else if eq .Values.cronjob.mode "checkcoreversion" }}

            args:
              - node tools/crons/checkCoreVersion.js;

    {{- end }}

            imagePullPolicy: Always

            envFrom:
              - configMapRef:
                  name: {{.Values.envName}}
              - secretRef:
                  name: {{.Values.secretName}}
            
            env:
            - name: DEPLOYMENT_MODE
              value: {{.Values.DEPLOYMENT_MODE}}
            - name: DB_SSL
              value: "{{.Values.db_ssl}}"
            - name: ELASTIC_APM_SERVICE_NAME
              value: {{.Release.Name}}
            - name: ELASTIC_APM_SERVER_URL
              value: {{.Values.APM_URL}}

            resources:
              limits:
                memory: "300Mi"
                cpu: "100m"
              requests:
                memory: "25Mi"
                cpu: "15m"

          restartPolicy: OnFailure

{{- end }}